--ASSIGNMENT 3 
--TAYLOR REMBOS
--------------------

--EXAMPLE VIEWS
--------------------
--CREATE VIEW V1 AS
--SELECT A
--FROM T1, T2
--WHERE T1.B = T2.C;
--------------------
--YOUR VIEWS HERE 
--------------------

%%%1
--SQL FOR QUESTION 1
--EXAMPLE CODE
--SELECT COL1, COL2
--FROM T1, T2
--WHERE T1.A = T2.B
--------------------
SELECT DISTINCT NAME
FROM 'CLIMBED', 'PARTICIPATED'
WHERE PEAK = "Pilot Knob (S)";
--------------------


%%%2 
--SQL FOR QUESTION 2
--------------------
SELECT distinct peak 
FROM 'PARTICIPATED','CLIMBED' 
WHERE name = 'MARK' AND participated.trip_id = climbed.trip_id;
--------------------

%%%3
--SQL FOR QUESTION 3
--------------------
SELECT DISTINCT CLIMBER FROM
(SELECT DISTINCT NAME AS CLIMBER
FROM 'CLIMBED','PARTICIPATED'
WHERE CLIMBED.TRIP_ID = PARTICIPATED.TRIP_ID)
JOIN 
(SELECT * FROM 'PEAK'
WHERE PEAK.DIFF = 5);
--------------------

%%%4
--SQL FOR QUESTION 4
--------------------
SELECT PEAK FROM 'CLIMBED'
GROUP BY PEAK
HAVING COUNT(*) = 1;
--------------------


%%%5
--SQL FOR QUESTION 5
--------------------
SELECT DISTINCT PEAK.NAME 
FROM 'PARTICIPATED','PEAK'
WHERE PARTICIPATED.NAME = "JOHN" and PEAK.ELEV > 14000;
--------------------


%%%6
--SQL FOR QUESTION 6
--------------------
SELECT MAP FROM
(SELECT MAP, MIN(ELEV) AS MIN
FROM 'PEAK'
GROUP BY MAP)
NATURAL JOIN
(SELECT MAP, MAX(ELEV) AS MAX
 FROM 'PEAK'
 GROUP BY MAP)
 WHERE MAX-MIN > 2000;
--------------------

%%%7 
--SQL FOR QUESTION 7
--------------------
SELECT MAP, NAME, AVG(ELEV)
FROM 'PEAK'
GROUP BY MAP
ORDER BY AVG(ELEV) DESC;
--------------------

%%%8
--SQL FOR QUESTION 8
--------------------
SELECT MARK FROM
(SELECT DISTINCT PEAK AS MARK 
FROM 'PARTICIPATED', 'CLIMBED'
 WHERE NAME = 'MARK' AND PARTICIPATED.TRIP_ID = CLIMBED.TRIP_ID)
INNER JOIN
(SELECT DISTINCT PEAK AS MARY 
FROM 'PARTICIPATED', 'CLIMBED'
WHERE NAME = 'MARY' AND PARTICIPATED.TRIP_ID = CLIMBED.TRIP_ID)
ON MARK = MARY;
--------------------

%%%9
--SQL FOR QUESTION 9
--------------------
SELECT REGION, COUNT(NAME) FROM
(SELECT DISTINCT REGION, NAME
FROM 'PEAK' AS P1
WHERE NAME NOT IN (SELECT PEAK FROM 'CLIMBED'))
GROUP BY REGION;
--------------------

%%%10
--SQL FOR QUESTION 10
--------------------
SELECT TRIP_ID FROM
(SELECT CLIMB.TRIP_ID, PEAK.ELEV, CLIMB.PEAK, PEAK.NAME
FROM 'CLIMBED' AS CLIMB, 'PEAK' AS PEAK)
GROUP BY TRIP_ID
HAVING SUM(ELEV) > 500000;
--------------------

%%%11
--SQL FOR QUESTION 11
--------------------
SELECT AVG(NUM), SEX FROM
(SELECT COUNT(PEAK) AS NUM, P1.NAME, SEX
FROM 'PARTICIPATED' AS P1
JOIN 'CLIMBED','CLIMBER' ON CLIMBED.TRIP_ID = P1.TRIP_ID AND CLIMBER.NAME = P1.NAME
GROUP BY P1.NAME)
GROUP BY SEX;
--------------------


%%%12 
--SQL FOR QUESTION 12
--------------------
SELECT DISTINCT P1.NAME, P1.PEAK FROM 
(SELECT * FROM 'CLIMBED' AS MARIA
JOIN 'PARTICIPATED' ON PARTICIPATED.TRIP_ID = MARIA.TRIP_ID
WHERE NAME = 'MARIA') AS P1
LEFT JOIN 'PARTICIPATED' 
ON 
(SELECT * FROM 'CLIMBED'
 JOIN 'PARTICIPATED' ON PARTICIPATED.TRIP_ID = CLIMBED.TRIP_ID);

--------------------

%%%13
--SQL FOR QUESTION 13
--------------------
--YOUR CODE HERE
--------------------

%%%14
--SQL FOR QUESTION 14
--------------------
BARBARA;DONALD;438
BETTY;KENNETH;438
DANIEL;MARY;438
DONALD;ELIZABETH;438
DONNA;MARY;438
EDWARD;ROBERT;438
ELIZABETH;KENNETH;438
GEORGE;KENNETH;438
JENNIFER;KENNETH;438
JOHN;MARK;438
KENNETH;MARY;438
LINDA;MARY;438
MARIA;MARY;438
MARK;MICHAEL;438
MARY;PATRICIA;438
PATRICIA;STEVEN;438

--------------------

%%%15
--SQL FOR QUESTION 15
--------------------
SELECT NAME, COUNT(TRIP_ID) FROM
(SELECT * FROM 'CLIMBED'
JOIN 'PARTICIPATED' ON PARTICIPATED.TRIP_ID = CLIMBED.TRIP_ID)
GROUP BY NAME
HAVING COUNT(TRIP_ID) > 20;
--------------------
